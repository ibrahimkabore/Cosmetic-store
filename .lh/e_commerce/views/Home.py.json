{
    "sourceFile": "e_commerce/views/Home.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 34,
            "patches": [
                {
                    "date": 1738703248545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738703284101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n from django.http import HttpResponse\r\n from django.shortcuts import render\r\n \r\n #### error 404 #######\r\n-def Home(request, exception):\r\n-    return render(request, 'home/404.', {}, status=404)\r\n+def Home(request):\r\n+    \r\n+    \r\n+    return render(request, 'home/')\r\n \r\n \r\n ### error 500   ####### \n\\ No newline at end of file\n"
                },
                {
                    "date": 1738703333813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,9 @@\n from django.http import HttpResponse\r\n from django.shortcuts import render\r\n \r\n-#### error 404 #######\r\n def Home(request):\r\n     \r\n     \r\n-    return render(request, 'home/')\r\n+    return render(request, 'home/home.html')\r\n \r\n-\r\n\\ No newline at end of file\n-### error 500   ####### \n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1738947643512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,7 @@\n from django.shortcuts import render\r\n \r\n def Home(request):\r\n     \r\n-    \r\n     return render(request, 'home/home.html')\r\n \r\n  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1738948893321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,14 @@\n from django.http import HttpResponse\r\n from django.shortcuts import render\r\n+from e_commerce.models import Product\r\n \r\n def Home(request):\r\n     \r\n     return render(request, 'home/home.html')\r\n \r\n\\ No newline at end of file\n- \n+\r\n+\r\n+def home_view(request):\r\n+    star_products = Product.objects.filter(star_product='Yes')\r\n+    return render(request, \r\n+                  'home/home.html', {'star_products': star_products})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738948904529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,6 +9,5 @@\n \r\n \r\n def home_view(request):\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n-    return render(request, \r\n-                  'home/home.html', {'star_products': star_products})\n\\ No newline at end of file\n+    return render(request,'home/home.html', {'star_products': star_products})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738949317934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,5 +9,6 @@\n \r\n \r\n def home_view(request):\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n+    print(star_products)\r\n     return render(request,'home/home.html', {'star_products': star_products})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738949370911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,12 @@\n from django.shortcuts import render\r\n from e_commerce.models import Product\r\n \r\n def Home(request):\r\n+     \r\n+     star_products = Product.objects.filter(star_product='Yes')\r\n+\r\n+    print(star_products)\r\n     \r\n     return render(request, 'home/home.html')\r\n \r\n \r\n"
                },
                {
                    "date": 1738949405297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,14 @@\n+from django.http import HttpResponse\r\n+from django.shortcuts import render\r\n+from e_commerce.models import Product\r\n+\r\n+def Home(request):\r\n+    \r\n+    # list of products \r\n+    star_products = Product.objects.filter(star_product='Yes')\r\n+    print(star_products)\r\n+    \r\n+    return render(request, 'home/home.html',{'star_products': star_products})\r\n+\r\n+\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1738949413909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,30 +3,12 @@\n from e_commerce.models import Product\r\n \r\n def Home(request):\r\n     \r\n-    # list of products \r\n+    # list of products star\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     print(star_products)\r\n     \r\n     return render(request, 'home/home.html',{'star_products': star_products})\r\n \r\n \r\n- \n-from django.http import HttpResponse\r\n-from django.shortcuts import render\r\n-from e_commerce.models import Product\r\n-\r\n-def Home(request):\r\n-     \r\n-     star_products = Product.objects.filter(star_product='Yes')\r\n-\r\n-    print(star_products)\r\n-    \r\n-    return render(request, 'home/home.html')\r\n-\r\n-\r\n-\r\n-def home_view(request):\r\n-    star_products = Product.objects.filter(star_product='Yes')\r\n-    print(star_products)\r\n\\ No newline at end of file\n-    return render(request,'home/home.html', {'star_products': star_products})\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1738949852410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,16 @@\n+from django.http import HttpResponse\r\n+from django.shortcuts import render\r\n+from e_commerce.models import Product\r\n+\r\n+def Home(request):\r\n+    \r\n+    # list of products star\r\n+    star_products = Product.objects.filter(star_product='Yes')\r\n+    print(star_products)\r\n+    \r\n+    \r\n+    \r\n+    return render(request, 'home/home.html',{'star_products': star_products})\r\n+\r\n+\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1738949899222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,29 +2,28 @@\n from django.shortcuts import render\r\n from e_commerce.models import Product\r\n \r\n def Home(request):\r\n-    \r\n-    # list of products star\r\n+    # List of star products\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n-    print(star_products)\r\n     \r\n+    # List of recommended products\r\n+    recommended_products = Product.objects.filter(recommended='Yes')\r\n     \r\n+    # List of bestseller products\r\n+    bestseller_products = Product.objects.filter(bestseller='Yes')\r\n     \r\n-    return render(request, 'home/home.html',{'star_products': star_products})\r\n-\r\n-\r\n- \n-from django.http import HttpResponse\r\n-from django.shortcuts import render\r\n-from e_commerce.models import Product\r\n-\r\n-def Home(request):\r\n+    # List of recent products (added in the last 30 days)\r\n+    from django.utils import timezone\r\n+    from datetime import timedelta\r\n+    recent_products = Product.objects.filter(\r\n\\ No newline at end of file\n+        created_at__gte=timezone.now() - timedelta(days=30)\r\n+    )\r\n     \r\n-    # list of products star\r\n-    star_products = Product.objects.filter(star_product='Yes')\r\n-    print(star_products)\r\n+    context = {\r\n+        'star_products': star_products,\r\n+        'recommended_products': recommended_products,\r\n+        'bestseller_products': bestseller_products,\r\n+        'recent_products': recent_products\r\n+    }\r\n     \r\n-    return render(request, 'home/home.html',{'star_products': star_products})\r\n-\r\n-\r\n- \n+    return render(request, 'home/home.html', context)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738949936129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n from django.http import HttpResponse\r\n from django.shortcuts import render\r\n from e_commerce.models import Product\r\n+from django.utils import timezone\r\n+from datetime import timedelta\r\n \r\n def Home(request):\r\n     # List of star products\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n@@ -11,11 +13,9 @@\n     \r\n     # List of bestseller products\r\n     bestseller_products = Product.objects.filter(bestseller='Yes')\r\n     \r\n-    # List of recent products (added in the last 30 days)\r\n-    from django.utils import timezone\r\n-    from datetime import timedelta\r\n+    # List of recent products\r\n     recent_products = Product.objects.filter(\r\n         created_at__gte=timezone.now() - timedelta(days=30)\r\n     )\r\n     \r\n"
                },
                {
                    "date": 1738953279916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,5 +25,9 @@\n         'bestseller_products': bestseller_products,\r\n         'recent_products': recent_products\r\n     }\r\n     \r\n-    return render(request, 'home/home.html', context)\n\\ No newline at end of file\n+    return render(request, 'home/home.html', context)\r\n+\r\n+def detail (request):\r\n+     \r\n+    return render(request, 'home/detail.html')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738953356944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,7 +27,7 @@\n     }\r\n     \r\n     return render(request, 'home/home.html', context)\r\n \r\n-def detail (request):\r\n+def Detail (request):\r\n      \r\n     return render(request, 'home/detail.html')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739021364111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,7 +27,8 @@\n     }\r\n     \r\n     return render(request, 'home/home.html', context)\r\n \r\n-def Detail (request):\r\n+def Detail (request,pk):\r\n+    product = Product.objects.get(pk=pk)\r\n      \r\n     return render(request, 'home/detail.html')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739021384440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,6 +29,5 @@\n     return render(request, 'home/home.html', context)\r\n \r\n def Detail (request,pk):\r\n     product = Product.objects.get(pk=pk)\r\n-     \r\n-    return render(request, 'home/detail.html')\n\\ No newline at end of file\n+    return render(request, 'home/detail.html', {'product': product})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739021726299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n from django.http import HttpResponse\r\n-from django.shortcuts import render\r\n+from django.shortcuts import get_object_or_404, render\r\n from e_commerce.models import Product\r\n from django.utils import timezone\r\n from datetime import timedelta\r\n \r\n@@ -28,6 +28,6 @@\n     \r\n     return render(request, 'home/home.html', context)\r\n \r\n def Detail (request,pk):\r\n-    product = Product.objects.get(pk=pk)\r\n+    product = get_object_or_404(Product, pk=pk)\r\n     return render(request, 'home/detail.html', {'product': product})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739025180186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,5 +29,6 @@\n     return render(request, 'home/home.html', context)\r\n \r\n def Detail (request,pk):\r\n     product = get_object_or_404(Product, pk=pk)\r\n-    return render(request, 'home/detail.html', {'product': product})\n\\ No newline at end of file\n+    return render(request, 'home/detail.html', {'product': product})\r\n+\r\n"
                },
                {
                    "date": 1739025247796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,4 @@\n     }\r\n     \r\n     return render(request, 'home/home.html', context)\r\n \r\n-def Detail (request,pk):\r\n-    product = get_object_or_404(Product, pk=pk)\r\n-    return render(request, 'home/detail.html', {'product': product})\r\n-\r\n"
                },
                {
                    "date": 1739317034052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,60 @@\n-from django.http import HttpResponse\r\n-from django.shortcuts import get_object_or_404, render\r\n-from e_commerce.models import Product\r\n-from django.utils import timezone\r\n+# views.py\r\n from datetime import timedelta\r\n+from django.http import JsonResponse\r\n+from django.contrib.auth.decorators import login_required\r\n+from django.shortcuts import render\r\n \r\n+from e_commerce.models import *\r\n+\r\n+@login_required\r\n+def toggle_favorite(request, product_id):\r\n+    if request.method == 'POST':\r\n+        try:\r\n+            product = Product.objects.get(id=product_id)\r\n+            favorite = Favorite.objects.filter(user=request.user, product=product)\r\n+            \r\n+            if favorite.exists():\r\n+                # Si le produit est déjà en favoris, on le retire\r\n+                favorite.delete()\r\n+                is_favorite = False\r\n+            else:\r\n+                # Sinon, on l'ajoute aux favoris\r\n+                Favorite.objects.create(user=request.user, product=product)\r\n+                is_favorite = True\r\n+                \r\n+            return JsonResponse({\r\n+                'status': 'success',\r\n+                'is_favorite': is_favorite\r\n+            })\r\n+        except Product.DoesNotExist:\r\n+            return JsonResponse({\r\n+                'status': 'error',\r\n+                'message': 'Produit non trouvé'\r\n+            }, status=404)\r\n+    return JsonResponse({'status': 'error'}, status=400)\r\n+\r\n def Home(request):\r\n-    # List of star products\r\n+    # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n-    \r\n-    # List of recommended products\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n-    \r\n-    # List of bestseller products\r\n     bestseller_products = Product.objects.filter(bestseller='Yes')\r\n-    \r\n-    # List of recent products\r\n     recent_products = Product.objects.filter(\r\n         created_at__gte=timezone.now() - timedelta(days=30)\r\n     )\r\n     \r\n+    # Ajout des favoris de l'utilisateur connecté\r\n+    user_favorites = []\r\n+    if request.user.is_authenticated:\r\n+        user_favorites = Favorite.objects.filter(\r\n+            user=request.user\r\n+        ).values_list('product_id', flat=True)\r\n+    \r\n     context = {\r\n         'star_products': star_products,\r\n         'recommended_products': recommended_products,\r\n         'bestseller_products': bestseller_products,\r\n-        'recent_products': recent_products\r\n+        'recent_products': recent_products,\r\n+        'user_favorites': user_favorites\r\n     }\r\n     \r\n-    return render(request, 'home/home.html', context)\r\n-\r\n+    return render(request, 'home/home.html', context)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739354044300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,34 +5,34 @@\n from django.shortcuts import render\r\n \r\n from e_commerce.models import *\r\n \r\n-@login_required\r\n-def toggle_favorite(request, product_id):\r\n-    if request.method == 'POST':\r\n-        try:\r\n-            product = Product.objects.get(id=product_id)\r\n-            favorite = Favorite.objects.filter(user=request.user, product=product)\r\n+# @login_required\r\n+# def toggle_favorite(request, product_id):\r\n+#     if request.method == 'POST':\r\n+#         try:\r\n+#             product = Product.objects.get(id=product_id)\r\n+#             favorite = Favorite.objects.filter(user=request.user, product=product)\r\n             \r\n-            if favorite.exists():\r\n-                # Si le produit est déjà en favoris, on le retire\r\n-                favorite.delete()\r\n-                is_favorite = False\r\n-            else:\r\n-                # Sinon, on l'ajoute aux favoris\r\n-                Favorite.objects.create(user=request.user, product=product)\r\n-                is_favorite = True\r\n+#             if favorite.exists():\r\n+#                 # Si le produit est déjà en favoris, on le retire\r\n+#                 favorite.delete()\r\n+#                 is_favorite = False\r\n+#             else:\r\n+#                 # Sinon, on l'ajoute aux favoris\r\n+#                 Favorite.objects.create(user=request.user, product=product)\r\n+#                 is_favorite = True\r\n                 \r\n-            return JsonResponse({\r\n-                'status': 'success',\r\n-                'is_favorite': is_favorite\r\n-            })\r\n-        except Product.DoesNotExist:\r\n-            return JsonResponse({\r\n-                'status': 'error',\r\n-                'message': 'Produit non trouvé'\r\n-            }, status=404)\r\n-    return JsonResponse({'status': 'error'}, status=400)\r\n+#             return JsonResponse({\r\n+#                 'status': 'success',\r\n+#                 'is_favorite': is_favorite\r\n+#             })\r\n+#         except Product.DoesNotExist:\r\n+#             return JsonResponse({\r\n+#                 'status': 'error',\r\n+#                 'message': 'Produit non trouvé'\r\n+#             }, status=404)\r\n+#     return JsonResponse({'status': 'error'}, status=400)\r\n \r\n def Home(request):\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n"
                },
                {
                    "date": 1739354088313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,36 +4,10 @@\n from django.contrib.auth.decorators import login_required\r\n from django.shortcuts import render\r\n \r\n from e_commerce.models import *\r\n+ \r\n \r\n-# @login_required\r\n-# def toggle_favorite(request, product_id):\r\n-#     if request.method == 'POST':\r\n-#         try:\r\n-#             product = Product.objects.get(id=product_id)\r\n-#             favorite = Favorite.objects.filter(user=request.user, product=product)\r\n-            \r\n-#             if favorite.exists():\r\n-#                 # Si le produit est déjà en favoris, on le retire\r\n-#                 favorite.delete()\r\n-#                 is_favorite = False\r\n-#             else:\r\n-#                 # Sinon, on l'ajoute aux favoris\r\n-#                 Favorite.objects.create(user=request.user, product=product)\r\n-#                 is_favorite = True\r\n-                \r\n-#             return JsonResponse({\r\n-#                 'status': 'success',\r\n-#                 'is_favorite': is_favorite\r\n-#             })\r\n-#         except Product.DoesNotExist:\r\n-#             return JsonResponse({\r\n-#                 'status': 'error',\r\n-#                 'message': 'Produit non trouvé'\r\n-#             }, status=404)\r\n-#     return JsonResponse({'status': 'error'}, status=400)\r\n-\r\n def Home(request):\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n@@ -41,20 +15,13 @@\n     recent_products = Product.objects.filter(\r\n         created_at__gte=timezone.now() - timedelta(days=30)\r\n     )\r\n     \r\n-    # Ajout des favoris de l'utilisateur connecté\r\n-    user_favorites = []\r\n-    if request.user.is_authenticated:\r\n-        user_favorites = Favorite.objects.filter(\r\n-            user=request.user\r\n-        ).values_list('product_id', flat=True)\r\n     \r\n     context = {\r\n         'star_products': star_products,\r\n         'recommended_products': recommended_products,\r\n         'bestseller_products': bestseller_products,\r\n         'recent_products': recent_products,\r\n-        'user_favorites': user_favorites\r\n-    }\r\n+     }\r\n     \r\n     return render(request, 'home/home.html', context)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739369654609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,13 @@\n     recent_products = Product.objects.filter(\r\n         created_at__gte=timezone.now() - timedelta(days=30)\r\n     )\r\n     \r\n-    \r\n+     # Convertir en liste de strings pour faciliter la comparaison dans le template\r\n+    user_favorites = list(Favorite.objects.filter(\r\n+            user=request.user\r\n+        ).values_list('product_id', flat=True))\r\n+    user_favorites = [str(id) for id in user_favorites]  # Conversion en strings\r\n     context = {\r\n         'star_products': star_products,\r\n         'recommended_products': recommended_products,\r\n         'bestseller_products': bestseller_products,\r\n"
                },
                {
                    "date": 1739369673389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,7 +25,8 @@\n         'star_products': star_products,\r\n         'recommended_products': recommended_products,\r\n         'bestseller_products': bestseller_products,\r\n         'recent_products': recent_products,\r\n+        'user_favorites': user_favorites,\r\n      }\r\n     \r\n     return render(request, 'home/home.html', context)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739369696531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n from e_commerce.models import *\r\n  \r\n \r\n def Home(request):\r\n+    user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n     bestseller_products = Product.objects.filter(bestseller='Yes')\r\n"
                },
                {
                    "date": 1739369997249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,13 +16,20 @@\n     recent_products = Product.objects.filter(\r\n         created_at__gte=timezone.now() - timedelta(days=30)\r\n     )\r\n     \r\n-     # Convertir en liste de strings pour faciliter la comparaison dans le template\r\n-    user_favorites = list(Favorite.objects.filter(\r\n-            user=request.user\r\n-        ).values_list('product_id', flat=True))\r\n-    user_favorites = [str(id) for id in user_favorites]  # Conversion en strings\r\n+    # Vérifier si l'utilisateur est authentifié\r\n+    if request.user.is_authenticated:\r\n+        try:\r\n+            # Récupérer les favoris de l'utilisateur\r\n+            user_favorites = list(Favorite.objects.filter(\r\n+                user=request.user\r\n+            ).values_list('product_id', flat=True))\r\n+            user_favorites = [str(id) for id in user_favorites]\r\n+        except Exception as e:\r\n+            print(f\"Error fetching favorites: {e}\")\r\n+            user_favorites = []\r\n+            \r\n     context = {\r\n         'star_products': star_products,\r\n         'recommended_products': recommended_products,\r\n         'bestseller_products': bestseller_products,\r\n"
                },
                {
                    "date": 1739878067426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n from e_commerce.models import *\r\n  \r\n \r\n def Home(request):\r\n+    number =CartItem.objects.count\r\n     user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n@@ -34,7 +35,8 @@\n         'recommended_products': recommended_products,\r\n         'bestseller_products': bestseller_products,\r\n         'recent_products': recent_products,\r\n         'user_favorites': user_favorites,\r\n+        'number': number,\r\n      }\r\n     \r\n     return render(request, 'home/home.html', context)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739904354034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n from e_commerce.models import *\r\n  \r\n \r\n def Home(request):\r\n-    number =CartItem.objects.count\r\n+    user = request.user  # Récupérer l'utilisateur connecté\r\n+    number = CartItem.objects.filter(user=user).count()  \r\n     user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n"
                },
                {
                    "date": 1739908060964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,12 @@\n from e_commerce.models import *\r\n  \r\n \r\n def Home(request):\r\n-    user = request.user  # Récupérer l'utilisateur connecté\r\n-    number = CartItem.objects.filter(user=user).count()  \r\n+    if request.user.is_authenticated:\r\n+        number = CartItem.objects.filter(user=request.user).count()\r\n+    else:\r\n+        number = 0  # Retourne 0 si l'utilisateur n'est pas connecté\r\n     user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n"
                },
                {
                    "date": 1739908199855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+# views.py\r\n+from datetime import timedelta\r\n+from django.http import JsonResponse\r\n+from django.contrib.auth.decorators import login_required\r\n+from django.shortcuts import render\r\n+\r\n+from e_commerce.models import *\r\n+ \r\n+\r\n+def Home(request):\r\n+    number =CartItem.objects.count\r\n+    user_favorites = []\r\n+    # Récupération des produits comme avant\r\n+    star_products = Product.objects.filter(star_product='Yes')\r\n+    recommended_products = Product.objects.filter(recommended='Yes')\r\n+    bestseller_products = Product.objects.filter(bestseller='Yes')\r\n+    recent_products = Product.objects.filter(\r\n+        created_at__gte=timezone.now() - timedelta(days=30)\r\n+    )\r\n+    \r\n+    # Vérifier si l'utilisateur est authentifié\r\n+    if request.user.is_authenticated:\r\n+        try:\r\n+            # Récupérer les favoris de l'utilisateur\r\n+            user_favorites = list(Favorite.objects.filter(\r\n+                user=request.user\r\n+            ).values_list('product_id', flat=True))\r\n+            user_favorites = [str(id) for id in user_favorites]\r\n+        except Exception as e:\r\n+            print(f\"Error fetching favorites: {e}\")\r\n+            user_favorites = []\r\n+            \r\n+    context = {\r\n+        'star_products': star_products,\r\n+        'recommended_products': recommended_products,\r\n+        'bestseller_products': bestseller_products,\r\n+        'recent_products': recent_products,\r\n+        'user_favorites': user_favorites,\r\n+        'number': number,\r\n+     }\r\n+    \r\n+    return render(request, 'home/home.html', context)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739908258322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,12 @@\n from e_commerce.models import *\r\n  \r\n \r\n def Home(request):\r\n-    number =CartItem.objects.count\r\n+    if request.user.is_authenticated:\r\n+        number = CartItem.objects.filter(user=request.user).count()\r\n+    else:\r\n+        number = 0  # Retourne 0 si l'utilisateur n'est pas connecté\r\n     user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n"
                },
                {
                    "date": 1739908317960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,9 @@\n from e_commerce.models import *\r\n  \r\n \r\n def Home(request):\r\n-    if request.user.is_authenticated:\r\n-        number = CartItem.objects.filter(user=request.user).count()\r\n-    else:\r\n-        number = 0  # Retourne 0 si l'utilisateur n'est pas connecté\r\n+    number =CartItem.objects.count\r\n     user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n"
                },
                {
                    "date": 1739909658992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,54 +7,12 @@\n from e_commerce.models import *\r\n  \r\n \r\n def Home(request):\r\n-    number =CartItem.objects.count\r\n-    user_favorites = []\r\n-    # Récupération des produits comme avant\r\n-    star_products = Product.objects.filter(star_product='Yes')\r\n-    recommended_products = Product.objects.filter(recommended='Yes')\r\n-    bestseller_products = Product.objects.filter(bestseller='Yes')\r\n-    recent_products = Product.objects.filter(\r\n-        created_at__gte=timezone.now() - timedelta(days=30)\r\n-    )\r\n-    \r\n-    # Vérifier si l'utilisateur est authentifié\r\n     if request.user.is_authenticated:\r\n-        try:\r\n-            # Récupérer les favoris de l'utilisateur\r\n-            user_favorites = list(Favorite.objects.filter(\r\n-                user=request.user\r\n-            ).values_list('product_id', flat=True))\r\n-            user_favorites = [str(id) for id in user_favorites]\r\n-        except Exception as e:\r\n-            print(f\"Error fetching favorites: {e}\")\r\n-            user_favorites = []\r\n-            \r\n-    context = {\r\n-        'star_products': star_products,\r\n-        'recommended_products': recommended_products,\r\n-        'bestseller_products': bestseller_products,\r\n-        'recent_products': recent_products,\r\n-        'user_favorites': user_favorites,\r\n-        'number': number,\r\n-     }\r\n-    \r\n-    return render(request, 'home/home.html', context)\n-# views.py\r\n-from datetime import timedelta\r\n-from django.http import JsonResponse\r\n-from django.contrib.auth.decorators import login_required\r\n-from django.shortcuts import render\r\n-\r\n-from e_commerce.models import *\r\n- \r\n-\r\n-def Home(request):\r\n-    if request.user.is_authenticated:\r\n         number = CartItem.objects.filter(user=request.user).count()\r\n     else:\r\n-        number = 0  # Retourne 0 si l'utilisateur n'est pas connecté\r\n+        number = 0 \r\n     user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n"
                },
                {
                    "date": 1739909816191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,12 @@\n  \r\n \r\n def Home(request):\r\n     if request.user.is_authenticated:\r\n-        number = CartItem.objects.filter(user=request.user).count()\r\n+        number = CartItem.objects.filter(cart__user=request.user, cart__is_active=True).count()\r\n     else:\r\n-        number = 0 \r\n+        number = 0\r\n+\r\n     user_favorites = []\r\n     # Récupération des produits comme avant\r\n     star_products = Product.objects.filter(star_product='Yes')\r\n     recommended_products = Product.objects.filter(recommended='Yes')\r\n"
                }
            ],
            "date": 1738703248545,
            "name": "Commit-0",
            "content": "from django.http import HttpResponse\r\nfrom django.shortcuts import render\r\n\r\n#### error 404 #######\r\ndef Home(request, exception):\r\n    return render(request, 'home/404.', {}, status=404)\r\n\r\n\r\n### error 500   ####### "
        }
    ]
}