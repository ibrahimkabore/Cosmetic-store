{
    "sourceFile": "e_commerce/models_french.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1738860145393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738860885736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,5 +256,54 @@\n     prix_achat = models.DecimalField(\r\n         _(\"Prix du Produit à l'Achat\"), \r\n         max_digits=10, \r\n         decimal_places=2\r\n-    )\n\\ No newline at end of file\n+    )\r\n+    \r\n+    \r\n+    # Les imports précédents restent identiques\r\n+\r\n+class Avis(ModeleDeBase):\r\n+    NOTATION_CHOICES = [\r\n+        (1, _('1 - Très Insatisfait')),\r\n+        (2, _('2 - Insatisfait')),\r\n+        (3, _('3 - Moyen')),\r\n+        (4, _('4 - Satisfait')),\r\n+        (5, _('5 - Excellent'))\r\n+    ]\r\n+\r\n+    produit = models.ForeignKey(\r\n+        Produit, \r\n+        on_delete=models.CASCADE,\r\n+        related_name='avis',\r\n+        verbose_name=_(\"Produit Associé\")\r\n+    )\r\n+    utilisateur = models.ForeignKey(\r\n+        UtilisateurPersonnalise, \r\n+        on_delete=models.CASCADE,\r\n+        verbose_name=_(\"Utilisateur\")\r\n+    )\r\n+    note = models.IntegerField(\r\n+        _(\"Note\"), \r\n+        choices=NOTATION_CHOICES\r\n+    )\r\n+    commentaire = models.TextField(\r\n+        _(\"Commentaire\"),\r\n+        max_length=1000,\r\n+        blank=True\r\n+    )\r\n+    date_avis = models.DateTimeField(\r\n+        _(\"Date de l'Avis\"),\r\n+        auto_now_add=True\r\n+    )\r\n+    recommande = models.BooleanField(\r\n+        _(\"Recommande le Produit\"),\r\n+        default=False\r\n+    )\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"Avis\")\r\n+        verbose_name_plural = _(\"Avis\")\r\n+        unique_together = ['produit', 'utilisateur']\r\n+\r\n+    def __str__(self):\r\n+        return f\"Avis de {self.utilisateur.username} pour {self.produit.nom}\"\n\\ No newline at end of file\n"
                }
            ],
            "date": 1738860145393,
            "name": "Commit-0",
            "content": "from django.db import models\r\nfrom django.contrib.auth.models import AbstractUser\r\nfrom django.core.validators import MinValueValidator, MaxValueValidator\r\nfrom django.utils import timezone\r\nfrom django.utils.translation import gettext_lazy as _\r\nfrom django.core.exceptions import ValidationError\r\nfrom safedelete.models import SafeDeleteModel, SOFT_DELETE_CASCADE\r\nimport uuid\r\nimport os\r\n\r\nclass ModeleDeBase(SafeDeleteModel):\r\n    id = models.UUIDField(\r\n        _(\"Identifiant Unique\"), \r\n        primary_key=True, \r\n        default=uuid.uuid4, \r\n        editable=False\r\n    )\r\n    date_creation = models.DateTimeField(\r\n        _(\"Horodatage de Création\"), \r\n        auto_now_add=True\r\n    )\r\n    date_mise_a_jour = models.DateTimeField(\r\n        _(\"Horodatage de Dernière Mise à Jour\"), \r\n        auto_now=True\r\n    )\r\n    _safedelete_policy = SOFT_DELETE_CASCADE\r\n\r\n    class Meta:\r\n        abstract = True\r\n\r\nclass Pays(ModeleDeBase):\r\n    nom = models.CharField(\r\n        _(\"Nom du Pays\"), \r\n        max_length=100, \r\n        unique=True\r\n    )\r\n    code = models.CharField(\r\n        _(\"Code du Pays\"), \r\n        max_length=3, \r\n        unique=True\r\n    )\r\n    \r\n    def __str__(self):\r\n        return self.nom\r\n\r\nclass Ville(ModeleDeBase):\r\n    nom = models.CharField(\r\n        _(\"Nom de la Ville\"), \r\n        max_length=100\r\n    )\r\n    pays = models.ForeignKey(\r\n        Pays, \r\n        on_delete=models.CASCADE, \r\n        related_name='villes',\r\n        verbose_name=_(\"Pays Associé\")\r\n    )\r\n    \r\n    class Meta:\r\n        unique_together = ['nom', 'pays']\r\n        verbose_name = _(\"Ville\")\r\n        verbose_name_plural = _(\"Villes\")\r\n    \r\n    def __str__(self):\r\n        return f\"{self.nom}, {self.pays.nom}\"\r\n\r\nclass UtilisateurPersonnalise(AbstractUser, ModeleDeBase):\r\n    CHOIX_GENRE = [\r\n        ('M', _('Masculin')),\r\n        ('F', _('Féminin')),\r\n        ('A', _('Autre'))\r\n    ]\r\n\r\n    telephone = models.CharField(\r\n        _(\"Numéro de Téléphone\"), \r\n        max_length=15, \r\n        blank=True\r\n    )\r\n    genre = models.CharField(\r\n        _(\"Genre\"), \r\n        max_length=1, \r\n        choices=CHOIX_GENRE, \r\n        blank=True\r\n    )\r\n    pays = models.ForeignKey(\r\n        Pays, \r\n        on_delete=models.SET_NULL, \r\n        null=True,\r\n        verbose_name=_(\"Pays de l'Utilisateur\")\r\n    )\r\n    ville = models.ForeignKey(\r\n        Ville, \r\n        on_delete=models.SET_NULL, \r\n        null=True,\r\n        verbose_name=_(\"Ville de l'Utilisateur\")\r\n    )\r\n    \r\n    est_connecte = models.BooleanField(\r\n        _(\"Statut de Connexion\"), \r\n        default=False\r\n    )\r\n    derniere_activite = models.DateTimeField(\r\n        _(\"Horodatage de Dernière Activité\"), \r\n        null=True, \r\n        blank=True\r\n    )\r\n\r\nclass Categorie(ModeleDeBase):\r\n    nom = models.CharField(\r\n        _(\"Nom de la Catégorie\"), \r\n        max_length=100, \r\n        unique=True\r\n    )\r\n    description = models.TextField(\r\n        _(\"Description de la Catégorie\"), \r\n        blank=True\r\n    )\r\n    categorie_parente = models.ForeignKey(\r\n        'self', \r\n        null=True, \r\n        blank=True, \r\n        on_delete=models.SET_NULL, \r\n        related_name='sous_categories',\r\n        verbose_name=_(\"Catégorie Parente\")\r\n    )\r\n\r\n    def __str__(self):\r\n        return self.nom\r\n\r\nclass Produit(ModeleDeBase):\r\n    STATUTS_PRODUIT = [\r\n        ('disponible', _('Disponible')),\r\n        ('rupture', _('Rupture de Stock')),\r\n        ('arrete', _('Arrêté'))\r\n    ]\r\n\r\n    nom = models.CharField(\r\n        _(\"Nom du Produit\"), \r\n        max_length=200, \r\n        unique=True\r\n    )\r\n    description = models.TextField(\r\n        _(\"Description du Produit\")\r\n    )\r\n    categorie = models.ForeignKey(\r\n        Categorie, \r\n        on_delete=models.CASCADE, \r\n        related_name='produits',\r\n        verbose_name=_(\"Catégorie du Produit\")\r\n    )\r\n    \r\n    prix = models.DecimalField(\r\n        _(\"Prix du Produit\"), \r\n        max_digits=10, \r\n        decimal_places=2, \r\n        validators=[MinValueValidator(0.01)]\r\n    )\r\n    pourcentage_reduction = models.DecimalField(\r\n        _(\"Pourcentage de Réduction\"), \r\n        max_digits=5, \r\n        decimal_places=2, \r\n        validators=[MinValueValidator(0), MaxValueValidator(100)],\r\n        null=True, \r\n        blank=True\r\n    )\r\n    \r\n    quantite_stock = models.PositiveIntegerField(\r\n        _(\"Quantité en Stock\"), \r\n        default=0\r\n    )\r\n    statut = models.CharField(\r\n        _(\"Statut du Produit\"), \r\n        max_length=20, \r\n        choices=STATUTS_PRODUIT, \r\n        default='disponible'\r\n    )\r\n    \r\n    image = models.ImageField(\r\n        _(\"Image du Produit\"), \r\n        upload_to='produits/', \r\n        null=True, \r\n        blank=True\r\n    )\r\n\r\nclass PanierAchats(ModeleDeBase):\r\n    utilisateur = models.ForeignKey(\r\n        UtilisateurPersonnalise, \r\n        on_delete=models.CASCADE,\r\n        verbose_name=_(\"Propriétaire du Panier\")\r\n    )\r\n    est_actif = models.BooleanField(\r\n        _(\"Statut Actif du Panier\"), \r\n        default=True\r\n    )\r\n\r\nclass ArticlePanier(ModeleDeBase):\r\n    panier = models.ForeignKey(\r\n        PanierAchats, \r\n        related_name='articles_panier', \r\n        on_delete=models.CASCADE,\r\n        verbose_name=_(\"Panier d'Achat\")\r\n    )\r\n    produit = models.ForeignKey(\r\n        Produit, \r\n        on_delete=models.CASCADE,\r\n        verbose_name=_(\"Produit\")\r\n    )\r\n    quantite = models.PositiveIntegerField(\r\n        _(\"Quantité de Produit\"), \r\n        default=1\r\n    )\r\n\r\nclass Commande(ModeleDeBase):\r\n    STATUTS_COMMANDE = [\r\n        ('en_attente', _('En Attente')),\r\n        ('en_cours', _('En Cours')),\r\n        ('expedie', _('Expédié')),\r\n        ('livre', _('Livré')),\r\n        ('annule', _('Annulé'))\r\n    ]\r\n\r\n    utilisateur = models.ForeignKey(\r\n        UtilisateurPersonnalise, \r\n        on_delete=models.CASCADE,\r\n        verbose_name=_(\"Client de la Commande\")\r\n    )\r\n    statut = models.CharField(\r\n        _(\"Statut de la Commande\"), \r\n        max_length=20, \r\n        choices=STATUTS_COMMANDE, \r\n        default='en_attente'\r\n    )\r\n    prix_total = models.DecimalField(\r\n        _(\"Prix Total de la Commande\"), \r\n        max_digits=10, \r\n        decimal_places=2\r\n    )\r\n    adresse_livraison = models.TextField(\r\n        _(\"Adresse de Livraison\")\r\n    )\r\n\r\nclass ArticleCommande(ModeleDeBase):\r\n    commande = models.ForeignKey(\r\n        Commande, \r\n        related_name='articles', \r\n        on_delete=models.CASCADE,\r\n        verbose_name=_(\"Commande Associée\")\r\n    )\r\n    produit = models.ForeignKey(\r\n        Produit, \r\n        on_delete=models.CASCADE,\r\n        verbose_name=_(\"Produit Commandé\")\r\n    )\r\n    quantite = models.PositiveIntegerField(\r\n        _(\"Quantité de Produit\")\r\n    )\r\n    prix_achat = models.DecimalField(\r\n        _(\"Prix du Produit à l'Achat\"), \r\n        max_digits=10, \r\n        decimal_places=2\r\n    )"
        }
    ]
}